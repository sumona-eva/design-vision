<?phpnamespace App\Http\Controllers\Api\V1;use App\Http\Controllers\Controller;use App\Http\Requests\V1\ProjectRequest;use App\Http\Resources\V1\ProjectResource;use App\Models\Project;use App\Models\ProjectImage;use App\Models\ProjectSpecification;use Illuminate\Http\Request;use Illuminate\Support\Str;use Symfony\Component\HttpFoundation\Response;class ProjectController extends Controller{    public function index()    {        $project = Project::query()            ->select('title','id','category_id','order_number','cover_image')            ->with('category')            ->get();        return ProjectResource::Collection($project);    }    public function store(ProjectRequest $request)    {        $data = $request->validated();        $data['slug'] = Str::slug($data['title']);        if($request->hasFile('cover_image')) {            $data['cover_image'] = '/storage/'.$request->file('cover_image')->store('uploads', 'public');        }        //save project        $project = Project::query()->create($data);        //save product images        if (isset($data['images'])) {            $images = $data['images'];            $imageData = [];            foreach ($images as $image) {                    $imageData[] = [                        'url' => '/storage/' . $image['file']->store('uploads', 'public'),                        'project_id' => $project->id,                    ];            }            ProjectImage::query()->insert($imageData);        }        // specification save        if(isset($data['specification'])) {            $specifications = $data['specification'];            $specificationData = [];            foreach( $specifications as $specification){                $specificationData[] = [                    'project_id' => $project->id,                    'key' => $specification['key'],                    'value' => $specification['value'],                ];            }            ProjectSpecification::query()->insert($specificationData);        }        return ProjectResource::make($project);    }    public function show(string $id)    {        $project = Project::query()            ->with(['category','specification','images'])            ->findOrFail($id);        return ProjectResource::make($project);    }    public function update(ProjectRequest $request, string $id)    {        $project = Project::query()->findOrFail($id);        $data = $request->validated();        $data['slug'] = Str::slug($data['title']);        $project->update($data);        return ProjectResource::make($project);    }    public function destroy(string $id)    {        $project = Project::query()->findOrFail($id);        $project->delete();        return Response::HTTP_OK;    }}